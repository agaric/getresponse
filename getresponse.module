<?php

/**
 * @file
 * GetResponse module.
 */

define('GETRESPONSE_URL', 'http://getresponse.com/view_webform.js');
define('GETRESPONSE_URL_CURL', 'http://app.getresponse.com/add_contact_webform.html');
define('GETRESPONSE_URL_FEED', 'http://blog.getresponse.com/feed');
define('GETRESPONSE_URL_FEED_LIMIT', 10);
define('GETRESPONSE_STYLE_DRUPAL', 0);
define('GETRESPONSE_STYLE_WEBFORM', 1);

/**
 * Send visitor name and email to GetResponse Webform.
 *
 * @param string $name
 *   real name of the visitor
 *
 * @param string $email
 *   e-mail address of the visitor
 *
 * @param string $webform_id
 *   numeric webForm id from getresponse.com
 *
 * @param string $method
 *   POST or GET
 */
function getresponse_add_contact($name, $email, $webform_id, $method) {
  $data = 'type=ajax&name=' . urlencode($name) . '&email=' . urlencode($email) . '&webform_id=' . $webform_id;
  $options = array(
    'method' => $method,
    'data' => $data,
    'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
  );
  drupal_http_request(GETRESPONSE_URL_CURL, $options);
}

/**
 * Implements hook_help().
 */
function getresponse_help($path, $arg) {
  switch ($path) {
    case 'admin/help#getresponse':
      $output = '';
      $output .= '<h3>' . t("About") . '</h3>';
      $output .= '<p>' . t("This plug-in/module enables installation of a GetResponse fully customizable sign up form on your Drupal site.");
      $output .= '<br/>' . t("To find out more about GetResponse, please visit: <a href='http://www.getresponse.com/about-us'>http://www.getresponse.com/about-us</a>") . '</p>';
      $output .= '<h2>' . t("To use GetResponse web forms on a Drupal web page, follow these instructions:") . '</h3>';
      $output .= '<ol>';
      $output .= '<p><strong>' . t("In GetResponse, find the WID tag.") . '</strong></p>';
      $output .= '<li>' . t("Log in to your GetResponse account.") . '</li>';
      $output .= '<li>' . t("Create a new web form by clicking Web Forms -> Create new or choose an existing web form by clicking Web Forms -> Web Forms list.") . '</li>';
      $output .= '<li>' . t("If you are designing a new form, advance to the “Publish” screen and scroll down to view the HTML code. If you are using an existing form, click Web Forms -> Web Forms list then click the “view source” link for the form you select.") . '</li>';
      $output .= '<li>' . t("In the HTML code, find the URL of the Web Form and copy the WID number. It's the number that follows “WID=”.") . '</li>';
      $output .= '<p><strong>' . t("In Drupal, enter the GetResponse WID tag.") . '</strong></p>';
      $output .= '<li>' . t("To change the layout of the web form on your Drupal page, log in to your Drupal admin account. Go to “Configuration”, scroll down to the Web Services section and click “GetResponse”.") . '</li>';
      $output .= '<li>' . t("In the Web form ID field, enter the WID tag you found in your GetResponse web form editor page.") . '</li>';
      $output .= '<li>' . t("In the “Style” pulldown menu, choose the GetResponse layout or the Drupal standard layout for web forms.") . '</li>';
      $output .= '<li>' . t("Last but not least, decide where the GetResponse web form should appear on your website. Click “Structure -> Blocks”, scroll down to the “Disabled” section and locate the pulldown menu beside the GetResponse WebForm plugin. Click to select the position where the web form should be shown. ") . '</li>';
      $output .= '</ol>';
      $output .= '<p></p>';
      $output .= '<h3>' . t("To enable blog readers to subscribe to your GetResponse campaigns via blog comments, follow these instructions:") . '</h3>';
      $output .= '<ol>';
      $output .= '<p><strong>' . t("In GetResponse, find the WID tag.") . '</strong></p>';
      $output .= '<li>' . t("Log in to your GetResponse account.") . '</li>';
      $output .= '<li>' . t("Create a new web form by clicking Web Forms -> Create new or choose an existing web form by clicking Web Forms -> Web Forms list.") . '</li>';
      $output .= '<li>' . t("If you are designing a new form, advance to the “Publish” screen and scroll down to view the HTML code. If you are using an existing form, click Web Forms -> Web Forms list then click the “view source” link for the form you select.") . '</li>';
      $output .= '<li>' . t("In the HTML code, find the URL of the Web Form and copy the WID number. It's the number that follows “WID=”.") . '</li>';
      $output .= '<p><strong>' . t("In Drupal, enter the GetResponse WID tag.") . '</strong></p>';
      $output .= '<li>' . t("In the “Web form ID” field, enter the WID tag you found in your GetResponse web form editor page.") . '</li>';
      $output .= '<li>' . t("Click “Configuration”, scroll down to the Web Services section, and make sure “Comment integration” at “Subscribe via Comment” is switched ON.") . '</li>';
      $output .= '<li>' . t("In the line below “Additional text”, choose a call-to-action sentence") . '</li>';
      $output .= '<li>' . t("To activate the commenting function, click “Structure -> Content types”. You can either create a new content type or click “edit” at an existing one. Find the appropriate options in the lower left corner of the “Comment settings” tab. It's important that the “Anonymous commenting” pulldown menu is activated on “Anonymous posters must leave their contact 
information”.") . '</li>';
      $output .= '</ol>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function getresponse_menu() {
  $items = array();
  $items['admin/config/services/getresponse'] = array(
    'title' => 'GetResponse',
    'description' => 'Configuration for GetResponse module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('getresponse_admin'),
    'access arguments' => array('administer getresponse'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'getresponse.feed.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function getresponse_permission() {
  return array(
    'administer getresponse' => array(
      'title' => t('Administer GetResponse module settings'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * GetResponse Settings Page.
 */
function getresponse_admin() {
  $form = array();

  $form['left'] = array(
    '#type' => 'item',
  );

  $form['right'] = array(
    '#type' => 'item',
  );

  $form['left']['settings'] = array(
    '#type' => 'fieldset',
    '#title' => t("GetResponse Config"),
    '#weight' => 1,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['left']['settings']['title1'] = array(
    '#type' => 'item',
    '#markup' => '<h3>' . t("Subscribe via Web Form") . '</h3>',
  );

  $form['left']['settings']['getresponse_webformid'] = array(
    '#type' => 'textfield',
    '#title' => t("Web form ID:"),
    '#default_value' => variable_get('getresponse_webformid', ''),
    '#size' => 0,
    '#maxlength' => 7,
    '#description' => t("(leave empty to disable)"),
  );

  $form['left']['settings']['getresponse_styleid'] = array(
    '#type' => 'select',
    '#title' => t("Style:"),
    '#default_value' => variable_get('getresponse_styleid', GETRESPONSE_STYLE_WEBFORM),
    '#options' => array(
      '0' => t("Drupal"),
      '1' => t("Web Form"),
    ),
  );

  $form['left']['settings']['title2'] = array(
    '#type' => 'item',
    '#markup' => '<br /><h3>' . t("Subscribe via Comment") . '</h3>',
  );

  $form['left']['settings']['getresponse_comment_on'] = array(
    '#type' => 'select',
    '#title' => t("Comment integration:"),
    '#default_value' => variable_get('getresponse_comment_on', 1),
    '#options' => array(
      '1' => t("On"),
      '0' => t("Off"),
    ),
    '#description' => t("(allow subscriptions when visitors comment)"),
  );

  $form['left']['settings']['getresponse_comment_label'] = array(
    '#type' => 'textfield',
    '#title' => t("Additional text:"),
    '#default_value' => variable_get('getresponse_comment_label', t("Sign up to our newsletter!")),
    '#size' => 0,
    '#minlength' => 7,
  );

  $form['left']['settings']['my_info'] = array(
    '#type' => 'item',
    '#markup' => '<br /><strong>' . t("Where is my web form ID ?") . '</strong><br />' . t("You will find your web form ID right in your GetResponse account. Go to Web Forms => Web forms list and click on the 'Source' link in a selected web form. Your web form ID is the number you will see right after the '?wid=' portion of the JavaScript code.") . '<div class="GR_img_webform_id"></div><br /><br />',
  );

  $form['right']['rss'] = array(
    '#type' => 'fieldset',
    '#title' => t("GetResponse RSS"),
    '#weight' => 2,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $rss = new GetResponseRss();

  $form['right']['rss']['content'] = array(
    '#type' => 'item',
    '#markup' => $rss->renderRss(),
  );

  $form['right']['social'] = array(
    '#type' => 'fieldset',
    '#title' => t("GetResponse Social"),
    '#weight' => 3,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );

  $form['right']['social']['facebook'] = array(
    '#type' => 'item',
    '#markup' => l(t("Facebook"), 'http://www.facebook.com/getresponse', array(
      'attributes' => array(
        'class' => array('GR_ico', 'sprite', 'facebook-ico'),
      ),
    )),
  );

  $form['right']['social']['twitter'] = array(
    '#type' => 'item',
    '#markup' => l(t("Twitter"), 'http://twitter.com/getresponse', array(
      'attributes' => array(
        'class' => array('GR_ico', 'sprite', 'twitter-ico'),
      ),
    )),
  );

  $form['right']['social']['linkedin'] = array(
    '#type' => 'item',
    '#markup' => l(t("LinkedIn"), 'http://www.linkedin.com/company/implix', array(
      'attributes' => array(
        'class' => array('GR_ico', 'sprite', 'linkedin-ico'),
      ),
    )),
  );

  $form['right']['social']['blog'] = array(
    '#type' => 'item',
    '#markup' => l(t("Blog"), 'http://blog.getresponse.com', array(
      'attributes' => array(
        'class' => array('GR_ico', 'sprite', 'blog-ico'),
      ),
    )),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_admin_validate().
 */
function getresponse_admin_validate($form, &$form_state) {
  $webform_id = $form_state['values']['getresponse_webformid'];
  if ((!is_numeric($webform_id) || (int)$webform_id != $webform_id || $webform_id < 0) && !empty($webform_id)) {
    form_set_error('getresponse_webformid', t("You must enter an integer or leave empty to disable."));
  }
}

/**
 * Implements hook_block_info().
 */
function getresponse_block_info() {
  $blocks = array();
  $blocks['webform'] = array(
    'info' => t("GetResponse WebForm"),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function getresponse_block_view($delta = '') {
  $block = array();
  $block['content'] = '<noscript>' . t("Please enable JavaScript to use the GetResponse service.") . '</noscript>';
  $webform_id = variable_get('getresponse_webformid', '');
  $style_id = variable_get('getresponse_styleid', GETRESPONSE_STYLE_WEBFORM);
  if ($style_id == GETRESPONSE_STYLE_WEBFORM) {
    $block['content'] .= '<script type="text/javascript" src="' . GETRESPONSE_URL . '?wid=' . $webform_id . '"></script>';
  }
  else {
    $block['content'] .= '<script type="text/javascript" src="' . GETRESPONSE_URL . '?wid=' . $webform_id . '&css=1"></script>';
  }
  return $block;
}

/**
 * Implements hook_form_comment_form_alter().
 */
function getresponse_form_comment_form_alter(&$form, &$form_state, $form_id) {
  $webform_id = variable_get('getresponse_webformid', '');
  $comment_on = variable_get('getresponse_comment_on', '0');
  $can_enter_email = FALSE;
  if (variable_get('comment_anonymous_' . str_replace('comment_node_', '', $form_state['comment']->node_type), COMMENT_ANONYMOUS_MAYNOT_CONTACT) == COMMENT_ANONYMOUS_MUST_CONTACT) {
    $can_enter_email = TRUE;
  }
  if (!user_is_logged_in() && $comment_on && !empty($webform_id) && $can_enter_email) {
    $form['getresponse_comment_checkbox'] = array(
      '#type' => 'checkbox',
      '#title' => variable_get('getresponse_comment_label', t("Sign up to our newsletter!")),
      '#default_value' => 0,
    );
  }
}

/**
 * Implements hook_comment_insert().
 */
function getresponse_comment_insert($comment) {
  if (!user_is_logged_in()) {
    $webform_id = variable_get('getresponse_webformid', '');
    $comment_on = variable_get('getresponse_comment_on', '0');
    if ($comment_on && !empty($webform_id) && !empty($comment->mail) && $comment->getresponse_comment_checkbox) {
      // First request: GET validate data.
      getresponse_add_contact($comment->name, $comment->mail, $webform_id, 'GET');
      // Second request: POST send data to GetResponse Webform.
      getresponse_add_contact($comment->name, $comment->mail, $webform_id, 'POST');
    }
  }
}
